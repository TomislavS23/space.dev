package dev.space.view;

import dev.space.dto.UserDTO;
import dev.space.factory.MapperFactory;
import dev.space.frame.AdminFrame;
import dev.space.frame.UserFrame;
import dev.space.model.Users;
import dev.space.query.operation.UserOperations;
import dev.space.session.HibernateSessionFactory;
import dev.space.session.Operations;
import dev.space.utilities.MessageUtils;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;
import org.modelmapper.ModelMapper;

/**
 *
 * @author tomislav
 */
public class LoginFormPanel extends javax.swing.JPanel {

    private final JFrame parent;

    /**
     * Creates new form LoginForm
     * @param parent
     */
    public LoginFormPanel(JFrame parent) {
        initComponents();
        initialize();

        this.parent = parent;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbLogin = new javax.swing.JLabel();
        lbUsername = new javax.swing.JLabel();
        tfUsername = new javax.swing.JTextField();
        lbPassword = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        lbAuthError = new javax.swing.JLabel();
        pfPassword = new javax.swing.JPasswordField();

        lbLogin.setFont(new java.awt.Font("Cantarell", 1, 36)); // NOI18N
        lbLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbLogin.setText("LOGIN");

        lbUsername.setText("Username:");

        lbPassword.setText("Password:");

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lbAuthError.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        lbAuthError.setForeground(new java.awt.Color(255, 0, 0));
        lbAuthError.setText("Wrong username or password!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbPassword)
                            .addComponent(lbUsername)
                            .addComponent(tfUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                            .addComponent(lbAuthError)
                            .addComponent(pfPassword)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(136, 136, 136))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(lbLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbUsername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbAuthError)
                .addGap(26, 26, 26)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        if (!formValid()) {
            fields.forEach((x, y) -> y.setVisible(true));
        }

        UserDTO entity = new UserDTO(
                tfUsername.getText().trim(),
                new String(pfPassword.getPassword()));

        try {
            Optional<List<Users>> result = session.ReadEntity(mapper.map(entity, Users.class));

            if (!result.get().isEmpty()) {
                Users user = result.get().get(0);

                if (user.getIdRole().getIdRole() == 1) {
                    new UserFrame().setVisible(true);
                    parent.dispose();
                } else {
                    new AdminFrame().setVisible(true);
                    parent.dispose();
                }
            }
            fields.forEach((x, y) -> y.setVisible(true));
        } catch (Exception ex) {
            MessageUtils.showErrorMessage("Error", ex.getMessage());
        }
    }//GEN-LAST:event_btnSubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel lbAuthError;
    private javax.swing.JLabel lbLogin;
    private javax.swing.JLabel lbPassword;
    private javax.swing.JLabel lbUsername;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables

    // Global variables
    private UserOperations session;
    private ModelMapper mapper;
    private Map<JTextField, JLabel> fields = new HashMap<>();

    private void initialize() {
        initValidation();
        hideErrors();
        initSession();
        initMapper();
    }

    private void initValidation() {
        fields.put(tfUsername, lbAuthError);
        fields.put(pfPassword, lbAuthError);
    }

    private void hideErrors() {
        fields.forEach((x, y) -> y.setVisible(false));
    }

    private void initSession() {
        session = HibernateSessionFactory.InitializeSession(Operations.USER);
    }

    private boolean formValid() {
        boolean ok = true;

        for (Map.Entry<JTextField, JLabel> entry : fields.entrySet()) {
            ok &= !entry.getKey().getText().trim().isEmpty();
            entry.getValue().setVisible(entry.getKey().getText().trim().isEmpty());
        }

        return ok;
    }

    private void initMapper() {
        mapper = MapperFactory.InitializeMapper();
    }
}
